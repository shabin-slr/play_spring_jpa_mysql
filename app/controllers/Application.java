package controllers;

import models.User;
import play.mvc.*;
import repositories.UserRepository;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

/**
 * The main set of web services.
 */
@Named
@Singleton
public class Application extends Controller {

    private final UserRepository userRepository;

    // We are using constructor injection to receive a repository to support our desire for immutability.
    @Inject
    public Application(final UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    public Result index() {

        // For fun we save a new person and then find that one we've just saved. The id is auto generated by
        // the db so we know that we're round-tripping to the db and back in order to demonstrate something
        // interesting. Spring Data takes care of transactional concerns and the following code is all
        // executed on the same thread (a requirement of the JPA entity manager).

        final User user = new User();
        user.firstname = "Bruce";
        user.surname = "Smith";

        final User savedPerson = userRepository.save(user);

        final User retrievedPerson = userRepository.findOne(savedPerson.id);

        // Deliver the index page with a message showing the id that was generated.

        return ok(views.html.index.render("Found id: " + retrievedPerson.id + " of person/people"));
    }
}
